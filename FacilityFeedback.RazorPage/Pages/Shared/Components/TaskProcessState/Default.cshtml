@using FacilityFeedback.Data.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@model IPagedList<TaskProcess>?;
@{
    var k = "/TaskProcessPage?handler=TaskProcessState&state=Waiting&pageIndex=";
}
@if (Model != null && Model.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayName("StartTime")
                </th>
                <th>
                    @Html.DisplayName("EndTime")
                </th>
                <th>
                    @Html.DisplayName("Description")
                </th>
                <th>
                    @Html.DisplayName("Process")
                </th>
                <th>
                    @Html.DisplayName("Problem")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>


                    <td>
                        @Html.DisplayFor(modelItem => item.Process)
                    </td>

                    <td>
                        @if (item.Problem != null)
                            @Html.DisplayFor(modelItem => item.Problem.Description)
                        else
                            @Html.Display("No Description")

                        </td>

                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
            }
        </tbody>
    </table>
    
       @*  <nav>
        @Html.PagedListPager(Model, pag), new PagedListRenderOptions()
        {
        ActiveLiElementClass = "active",
        PageClasses = new[]{ "page-link"},
        LiElementClasses=new[] { "page-item" },
        UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
        LinkToNextPageFormat = "Next",
        LinkToPreviousPageFormat = "Previous",
        MaximumPageNumbersToDisplay = 5,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
        })
    </nav> *@


    <nav id ="pageWaiting">
        @Html.PagedListPager(Model, page => Url.Action("TaskProcessState", new {state = "Waiting", pageIndex = page }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
    </nav>
}
@section Scripts{
    
}