@page
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model FacilityFeedback.RazorPage.Pages.FloorPage.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
@if (Model.FloorPaging != null && Model.FloorPaging.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayName("Code")
                </th>
                <th>
                    @Html.DisplayName("Status")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.FloorPaging)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> 
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        @Html.PagedListPager(Model.FloorPaging, page => Url.Action("index", new { pageIndex = page }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
    </nav>
}